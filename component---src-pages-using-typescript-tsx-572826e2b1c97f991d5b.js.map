{"version":3,"file":"component---src-pages-using-typescript-tsx-572826e2b1c97f991d5b.js","mappings":"2NA6CaA,EAA0B,kBAAMC,EAAAA,cAACC,EAAAA,EAAD,CAAKC,MAAM,oBAAjD,EAEP,UAlCwD,SAAC,GAAD,IACtDC,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,SAFsD,OAItDJ,EAAAA,cAACK,EAAAA,EAAD,KACEL,EAAAA,cAAAA,KAAAA,KAAAA,mBACkBA,EAAAA,cAAAA,IAAAA,KAAAA,0BAElBA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,OAAAA,KAAAA,YAD3C,0CAE8BA,EAAAA,cAAAA,OAAAA,KAAAA,YAF9B,qCAGUA,EAAAA,cAAAA,OAAAA,KAAAA,oBAHV,MAKAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,OAAAA,KAAAA,cAD3C,oBAEUA,EAAAA,cAAAA,OAAAA,KAAAA,cAFV,gBAE8CA,EAAAA,cAAAA,OAAAA,KAAAA,YAF9C,UAIAA,EAAAA,cAAAA,IAAAA,KAAAA,gCAC+BA,EAAAA,cAAAA,OAAAA,KAAOI,EAASE,UAD/C,uBAEYH,EAAKI,KAAKC,UAFtB,KAIAR,EAAAA,cAAAA,IAAAA,KAAAA,kCACkC,IAChCA,EAAAA,cAAAA,IAAAA,CAAGS,KAAK,yEAAR,kCAFF,KAOAT,EAAAA,cAACU,EAAAA,KAAD,CAAMC,GAAG,KAAT,2BA5BJ,C,iKCZWC,EAAU,iCACVC,EAAS,gCCYpB,EAVe,WAEX,OADAC,QAAQC,IAAI,SAAUC,GAElB,uBACAC,UAAWD,GADX,iCAMP,ECDD,EARgB,SAAC,GAAgB,IAAfE,EAAc,EAAdA,SACd,OACI,uBAAKD,UAAWD,GACXE,EAGZ,ECKKC,EACM,WAiBZ,EAfe,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SAEhB,OACE,gCACE,gBAAC,IAAD,CAAQE,UAAWD,IACnB,gBAAC,EAAD,KAAUD,GACV,gBAAC,EAAD,CAAQE,UAAWD,IAGxB,C,+CChBD,SAASlB,EAAT,GAAgD,IAAD,IAAhCoB,EAAgC,EAAhCA,YAAanB,EAAmB,EAAnBA,MAAOgB,EAAY,EAAZA,SACzBX,GAASe,EAAAA,EAAAA,gBAAe,YAAxBf,KAcFgB,EAAkBF,GAAed,EAAKiB,aAAaH,YACnDI,EAAY,UAAGlB,EAAKiB,oBAAR,aAAG,EAAmBtB,MAExC,OACE,gCACE,6BAAQuB,EAAkBvB,EAAN,MAAiBuB,EAAiBvB,GACtD,wBAAMwB,KAAK,cAAcd,QAASW,IAClC,wBAAMI,SAAS,WAAWf,QAASV,IACnC,wBAAMyB,SAAS,iBAAiBf,QAASW,IACzC,wBAAMI,SAAS,UAAUf,QAAQ,YACjC,wBAAMc,KAAK,eAAed,QAAQ,YAClC,wBAAMc,KAAK,kBAAkBd,SAAS,UAAAL,EAAKiB,oBAAL,eAAmBI,SAAnB,KACtC,wBAAMF,KAAK,gBAAgBd,QAASV,IACpC,wBAAMwB,KAAK,sBAAsBd,QAASW,IACzCL,EAGN,CAEDjB,EAAI4B,aAAe,CACjBR,YAAY,IAQd,K","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/content.module.css","webpack://gatsby-starter-default/./src/components/footer.jsx","webpack://gatsby-starter-default/./src/components/content.jsx","webpack://gatsby-starter-default/./src/components/layout.jsx","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var content = \"content-module--content--VMrOY\";\nexport var footer = \"content-module--footer--ma8AU\";","import React from 'react';\n\nimport * as styles from './content.module.css';\n\nconst Footer = () => {\n    console.log('styles', styles)\n    return (\n        <div\n        className={styles.footer}\n        >\n           汪渊的个人笔记文档 | created by @Gatsby\n        </div>\n    );\n}\nexport default Footer;\n","import React from 'react';\n\nimport * as styles from './content.module.css';\n\nconst Content = ({children}) => {\n    return (\n        <div className={styles.content}>\n            {children}\n        </div>\n    );\n}\n\nexport default Content;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport Content from \"./content\"\nimport \"./layout.css\"\n\nconst dataEnum = {\n  webTitle: '个人文档记录学习',\n};\nconst Layout = ({ children }) => {\n\n  return (\n    <>\n      <Header siteTitle={dataEnum.webTitle} />\n      <Content>{children}</Content>\n      <Footer siteTitle={dataEnum.webTitle} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","data","location","Layout","pathname","site","buildTime","href","Link","to","content","footer","console","log","styles","className","children","dataEnum","siteTitle","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","property","author","defaultProps"],"sourceRoot":""}